{"version":3,"sources":["webpack://rolwinreevan_gatsby_blog/./src/components/Comment/index.jsx","webpack://rolwinreevan_gatsby_blog/./src/templates/post/post.jsx","webpack://rolwinreevan_gatsby_blog/./src/templates/post/post.module.less"],"names":["componentDidMount","d","s","this","props","pageCanonicalUrl","pageId","window","DISQUS","reset","reload","config","page","url","identifier","disqus_config","document","createElement","src","Config","setAttribute","Date","head","body","appendChild","render","id","React","data","markdownRemark","html","frontmatter","title","fluid","cover","childImageSharp","excerpt","path","canonicalUrl","Utils","console","log","className","description","keywords","contentType","imageUrl","Header","Sidebar","alt","dangerouslySetInnerHTML","__html","Comment"],"mappings":"0RAiDA,E,sGAzCEA,kBAAA,WAAqB,IAkBTC,EACAC,EAnBQ,OAClB,EAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,OAEtBC,OAAOC,OACTD,OAAOC,OAAOC,MAAM,CAClBC,QAAQ,EACRC,OAFkB,WAGhBR,KAAKS,KAAKC,IAAMR,EAChBF,KAAKS,KAAKE,WAAaR,MAI3BC,OAAOQ,cAAgB,WACrB,EAAKH,KAAKC,IAAMR,EAChB,EAAKO,KAAKE,WAAaR,GAIjBL,EAAIe,UACJd,EAAID,EAAEgB,cAAc,WACxBC,IAAMC,iBACRjB,EAAEkB,aAAa,kBAAmB,IAAIC,OACrCpB,EAAEqB,MAAQrB,EAAEsB,MAAMC,YAAYtB,K,EAKrCuB,OAAA,WACE,OACE,2BACE,uBAAKC,GAAG,oB,GA/BOC,a,mBC8GvB,EAtGa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,EAA8BA,EAAKC,eAA3BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YAEZC,EACED,EADFC,MAAmCC,EACjCF,EADKG,MAASC,gBAAmBF,MAAWG,EAC5CL,EAD4CK,QAASC,EACrDN,EADqDM,KAGnDC,EAAeC,mBACnBpB,YACAA,eACAkB,GAmBF,OAhBAG,QAAQC,IAAI,oDACZD,QAAQC,IAAIb,GAEZY,QAAQC,IAAI,qBACZD,QAAQC,IAAItB,aAEZqB,QAAQC,IAAI,wBACZD,QAAQC,IAAItB,gBAEZqB,QAAQC,IAAI,WACZD,QAAQC,IAAIJ,GAEZG,QAAQC,IAAI,mBACZD,QAAQC,IAAIH,GAIV,qBAAQI,UAAU,gBAChB,qBAAQA,UAAU,aAChB,gBAAC,IAAD,CACEV,MAAOA,EACPW,YAAaP,EACbC,KAAMA,EACNO,SAAU,CAAC,QAAS,SAAU,gBAAiB,MAAO,QAAS,cAAe,cAC9EC,YAAY,UACZC,SAAUb,EAAMf,MAElB,gBAAC6B,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,KACE,uBAAKN,UAAU,kBACb,0BAAKV,GACL,uBAAKU,UCzDe,0CD0DlB,gBAAC,IAAD,CAAKA,UCzDI,gCDyDwBT,MAAOA,EAAOD,MAAOI,EAASa,IAAKjB,KAEtE,2BAASU,UC1DI,kCD0D0BQ,wBAAyB,CAAEC,OAAQrB,KAC1E,gBAACsB,EAAD,CAAS/C,iBAAkBiC,EAAchC,OAAQ0B","file":"component---src-templates-post-post-jsx-8ca7b63136b1094b941e.js","sourcesContent":["/* eslint-disable func-names */\n/* Vendor imports */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n/* App imports */\nimport Config from '../../../config';\n\nclass Comments extends React.Component {\n  componentDidMount() {\n    const { pageCanonicalUrl, pageId } = this.props;\n\n    if (window.DISQUS) {\n      window.DISQUS.reset({\n        reload: true,\n        config() {\n          this.page.url = pageCanonicalUrl;\n          this.page.identifier = pageId;\n        },\n      });\n    } else {\n      window.disqus_config = () => {\n        this.page.url = pageCanonicalUrl;\n        this.page.identifier = pageId;\n      };\n      (function () {\n        // eslint-disable-next-line no-undef\n        const d = document;\n        const s = d.createElement('script');\n        s.src = Config.disqusScript;\n        s.setAttribute('data-timestamp', +new Date());\n        (d.head || d.body).appendChild(s);\n      }());\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"disqus_thread\" />\n      </div>\n    );\n  }\n}\n\nComments.propTypes = {\n  pageCanonicalUrl: PropTypes.string.isRequired,\n  pageId: PropTypes.string.isRequired,\n};\n\nexport default Comments;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Header from '../../components/PageLayout/Header';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport SEO from '../../components/Seo';\nimport Comment from '../../components/Comment';\nimport Config from '../../../config';\nimport Utils from '../../utils/pageUtils';\n\nimport 'prismjs/themes/prism-solarizedlight.css';\nimport './highlight-syntax.less';\nimport * as style from './post.module.less';\n\nconst Post = ({ data }) => {\n  const { html, frontmatter } = data.markdownRemark;\n  const {\n    title, cover: { childImageSharp: { fluid } }, excerpt, path,\n  } = frontmatter;\n\n  const canonicalUrl = Utils.resolvePageUrl(\n    Config.siteUrl,\n    Config.pathPrefix,\n    path,\n  );\n\n  console.log(\"ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ðŸ¤¬ data ->\");\n  console.log(data);\n\n  console.log(\"Config.siteUrl ->\");\n  console.log(Config.siteUrl);\n\n  console.log(\"Config.pathPrefix ->\");\n  console.log(Config.pathPrefix);\n\n  console.log(\"path ->\");\n  console.log(path);\n\n  console.log(\"canonicalUrl ->\");\n  console.log(canonicalUrl);\n\n\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <SEO\n          title={title}\n          description={excerpt}\n          path={path}\n          keywords={['Ahmed', 'Komsan', 'IOS developer', 'IOS', 'Swift', 'Objective-c', 'technology']}\n          contentType=\"article\"\n          imageUrl={fluid.src}\n        />\n        <Header />\n        <SidebarWrapper>\n          <div className=\"marginTopTitle\">\n            <h1>{title}</h1>\n            <div className={style.bannerImgContainer}>\n              <Img className={style.bannerImg} fluid={fluid} title={excerpt} alt={title} />\n            </div>\n            <article className={style.blogArticle} dangerouslySetInnerHTML={{ __html: html }} />\n            <Comment pageCanonicalUrl={canonicalUrl} pageId={title} />\n          </div>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($postPath: String!) {\n    markdownRemark(frontmatter: { path: { eq: $postPath } }) {\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"DD MMM YYYY\")\n        tags\n        path\n        excerpt\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { path: { ne: $postPath } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport var bannerImgContainer = \"post-module--bannerImgContainer--30fp6\";\nexport var bannerImg = \"post-module--bannerImg--3ixlo\";\nexport var blogArticle = \"post-module--blogArticle--2egPC\";"],"sourceRoot":""}